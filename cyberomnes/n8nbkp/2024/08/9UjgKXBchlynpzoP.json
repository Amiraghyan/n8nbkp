{
  "active": false,
  "connections": {
    "Sort": {
      "main": [
        [
          {
            "node": "Format response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agent": {
      "main": [
        [
          {
            "node": "Send Reply",
            "type": "main",
            "index": 0
          },
          {
            "node": "Mark as read",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat OpenAI": {
      "ai_languageModel": [
        [
          {
            "node": "Classify appointment",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Chat OpenAI1": {
      "ai_languageModel": [
        [
          {
            "node": "Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Classify appointment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Workflow Tool": {
      "ai_tool": [
        [
          {
            "node": "Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Format response": {
      "main": [
        [
          {
            "node": "Stringify Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar": {
      "main": [
        [
          {
            "node": "Filter only confirmed and with set time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is appointment request": {
      "main": [
        [
          {
            "node": "Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Google Calendar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Classify appointment",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Extract start, end and name": {
      "main": [
        [
          {
            "node": "Sort",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter only confirmed and with set time": {
      "main": [
        [
          {
            "node": "Extract start, end and name",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Classify appointment": {
      "main": [
        [
          {
            "node": "Is appointment request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-08-09T04:15:05.079Z",
  "id": "9UjgKXBchlynpzoP",
  "isArchived": false,
  "meta": null,
  "name": "My workflow 12",
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "filters": {
          "includeSpamTrash": false,
          "readStatus": "unread"
        }
      },
      "id": "b79d3e4a-cf29-4e45-bf58-29812ac59b10",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "position": [
        500,
        560
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": "gpt-4",
        "options": {
          "temperature": 0.1
        }
      },
      "id": "93b99a47-16e2-4ddb-9324-56bcd703c23c",
      "name": "Chat OpenAI",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        720,
        740
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "name": "Calendar_Availability",
        "description": "Call this tool to get my calendar availability as stringified JSON array.",
        "workflowId": "={{ $workflow.id }}"
      },
      "id": "67306c2d-8248-4f82-822b-356bbcb4e6f2",
      "name": "Workflow Tool",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        1580,
        759
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": "gpt-4",
        "options": {
          "temperature": 0
        }
      },
      "id": "ae35d639-51af-420a-af90-15ef9e7ed9e2",
      "name": "Chat OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1420,
        759
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Check if incoming email is about appointment\nWe use LLM to check subject and body of the email and determine if it's an appointment request. ",
        "height": 410.24791575252334,
        "width": 616.8060552874073
      },
      "id": "1e5b8153-258a-443a-920b-a65c677e5ad2",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        460,
        460
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Get calendar availability and compose a response\nMake sure to update the Workflow ID if you are running this as 2 workflows",
        "height": 241.70645019745504,
        "width": 676.1951194231482
      },
      "id": "cfe7ea25-62b7-49c8-a772-50940d0beac2",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1340,
        460
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "your_email@gmail.com",
          "cachedResultName": "your_email@gmail.com"
        },
        "returnAll": true,
        "options": {
          "timeMin": "={{ $now.minus(1, 'day').toISO() }}",
          "timeMax": "={{ $now.plus(1, 'month').toISO() }}",
          "singleEvents": true
        }
      },
      "id": "8bef489b-96a8-42c4-990a-89585ddc12ba",
      "name": "Google Calendar",
      "type": "n8n-nodes-base.googleCalendar",
      "position": [
        680,
        1120
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "ff609b88-ff46-4859-a786-ccc7be08b15e",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        460,
        1120
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "concatenateItems",
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "response",
        "include": "allFieldsExcept",
        "fieldsToExclude": "sort",
        "options": {}
      },
      "id": "2e35e743-5b55-4374-8708-e40db13597e8",
      "name": "Format response",
      "type": "n8n-nodes-base.itemLists",
      "position": [
        1560,
        1120
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "response",
              "value": "={{ JSON.stringify($json.response) }}"
            }
          ]
        },
        "options": {}
      },
      "id": "8e238f52-3b3f-4f73-ae8e-a2d6ba318022",
      "name": "Stringify Response",
      "type": "n8n-nodes-base.set",
      "position": [
        1780,
        1120
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "start",
              "value": "={{ DateTime.fromISO($json.start.dateTime).toLocaleString(DateTime.DATE_HUGE) }}, {{ DateTime.fromISO($json.start.dateTime).toLocaleString(DateTime.TIME_24_WITH_SHORT_OFFSET) }}"
            },
            {
              "name": "end",
              "value": "={{ DateTime.fromISO($json.end.dateTime).toLocaleString(DateTime.DATE_HUGE) }}, {{ DateTime.fromISO($json.end.dateTime).toLocaleString(DateTime.TIME_24_WITH_SHORT_OFFSET) }}"
            },
            {
              "name": "name",
              "value": "={{ $json.summary }}"
            },
            {
              "name": "sort",
              "value": "={{ $json.start.dateTime }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f2b34a6c-f95a-4983-b2e3-9c4459c7508f",
      "name": "Extract start, end and name",
      "type": "n8n-nodes-base.set",
      "position": [
        1100,
        1120
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.status }}",
              "value2": "confirmed"
            }
          ],
          "boolean": [
            {
              "value1": "={{ $json.start.dateTime }}",
              "operation": "notEqual",
              "value2": "={{ undefined }}"
            }
          ]
        }
      },
      "id": "c90028c9-6118-40f1-b37d-662ccd447dec",
      "name": "Filter only confirmed and with set time",
      "type": "n8n-nodes-base.filter",
      "position": [
        880,
        1120
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.is_appointment }}",
              "value2": "true"
            }
          ],
          "boolean": [
            {
              "value1": "={{ $json.is_appointment }}",
              "value2": true
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "33de1c6b-0bb5-4a2b-a18e-5879e2b5d282",
      "name": "Is appointment request",
      "type": "n8n-nodes-base.if",
      "position": [
        1100,
        560
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsonSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"is_appointment\": {\n      \"type\": \"boolean\"\n    }\n  }\n}"
      },
      "id": "06ba53fd-752d-4f8e-8765-89142d72a0e3",
      "name": "Structured Output Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "position": [
        880,
        740
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Get all query google events for the next month and extract relevant data",
        "height": 224.60561166142082,
        "width": 810.4923211935056
      },
      "id": "c60cdc4b-c525-44ed-973d-e7d9d64582e9",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        640,
        1058.6115582634225
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Wrap the result in `response` object and return ",
        "height": 220.42397542781927,
        "width": 444.4130232558142
      },
      "id": "a1fe609d-1368-4855-be05-d6e8dfcca0f5",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1513,
        1060
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "sort",
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "sort"
            }
          ]
        },
        "options": {}
      },
      "id": "e542f93b-6797-4ac3-91e6-8c950fb3cb38",
      "name": "Sort",
      "type": "n8n-nodes-base.itemLists",
      "position": [
        1320,
        1120
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "operation": "markAsRead",
        "messageId": "={{ $('Gmail Trigger').item.json.id }}"
      },
      "id": "dcb98f32-4df1-4854-8608-d340b8261a48",
      "name": "Mark as read",
      "type": "n8n-nodes-base.gmail",
      "position": [
        1840,
        739
      ],
      "typeVersion": 2.1
    },
    {
      "parameters": {
        "operation": "reply",
        "messageId": "={{ $('Gmail Trigger').item.json.id }}",
        "message": "={{ $json.output }}",
        "options": {
          "replyToSenderOnly": true
        }
      },
      "id": "b64a59e6-a95c-46e9-bb62-0965940a72fa",
      "name": "Send Reply",
      "type": "n8n-nodes-base.gmail",
      "position": [
        1840,
        539
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "text": "=Sender: {{ $('Gmail Trigger').item.json.From }}\\nSubject: {{ $('Gmail Trigger').item.json.Subject }}\\nEmail Text: {{ $('Gmail Trigger').item.json.snippet }}",
        "options": {
          "systemMessage": "=You are an email scheduling assistant. Based on the received email, check my availability and propose an appropriate response. \nAim to get a specific time, rather than just a day. When checking my availability, make sure that there's enough time in between meetings.\nIf I'm not available, ALWAYS propose a new time based on my availability. When proposing a new time, always leave 15 minutes buffer from previous meeting.\nToday date and time is: {{ $now.toISO() }}."
        }
      },
      "id": "0a503df8-ef84-488f-88d6-3887fce3b2d2",
      "name": "Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1400,
        539
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "prompt": "=Please evaluate the following email to determine if it suggests scheduling a meeting or a call:\nSubject: {{ encodeURI($json.Subject) }}\nSnippet: {{ encodeURI($json.snippet) }}\nIndicate your assessment by responding with \"true\" if it suggests a meeting or call, or \"false\" otherwise. Use lowercase for your response.\n"
      },
      "id": "9e1cc1f5-1bb7-42c3-b441-c9900bee0c0c",
      "name": "Classify appointment",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "position": [
        720,
        560
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "repo_name": "n8nbkp",
  "repo_owner": "cyberomnes",
  "repo_path": "cyberomnes/n8nbkp/",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-08-09T04:15:15.000Z",
  "versionId": "61e8d392-eb6d-4738-9f28-f69734b43183"
}