{
  "active": false,
  "connections": {
    "Limit": {
      "main": [
        [
          {
            "node": "ElevenLabs - Generate Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "OpenAI - Speech to Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Chat": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Chat": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Insert Chat",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI - Speech to Text": {
      "main": [
        [
          {
            "node": "Get Chat",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ElevenLabs - Generate Audio": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-09-29T03:28:07.225Z",
  "id": "s2Jmykc92EUYjZhe",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "My workflow 27",
  "nodes": [
    {
      "parameters": {},
      "id": "cbe5b450-f1c6-4de6-8b0c-657cae880a75",
      "name": "Get Chat",
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "position": [
        2857,
        658
      ],
      "typeVersion": 1,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "mode": "insert",
        "messages": {
          "messageValues": [
            {
              "type": "user",
              "message": "={{ $('OpenAI - Speech to Text').item.json[\"text\"] }}"
            },
            {
              "type": "ai",
              "message": "={{ $json.text }}"
            }
          ]
        }
      },
      "id": "abb91f7f-0295-4c9b-ac93-c8be81c9dae8",
      "name": "Insert Chat",
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "position": [
        3697,
        658
      ],
      "typeVersion": 1,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "content": "## Get Context",
        "height": 238.4911357933579,
        "width": 486.4746124819703,
        "color": 6
      },
      "id": "77cb1cf9-2d02-4521-9db1-1fbdc6923d18",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2821,
        567
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Save Context",
        "height": 231.05945912581728,
        "width": 321.2536584847704,
        "color": 6
      },
      "id": "f802c347-f524-411c-b677-0553ac6cc959",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3667,
        569
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "context",
        "options": {}
      },
      "id": "213017df-93a3-4dbe-9a5a-361a3afa9e33",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "position": [
        3177,
        658
      ],
      "typeVersion": 1,
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "sessionKey": "test-0dacb3b5-4bcd-47dd-8456-dcfd8c258204",
        "sessionIdType": "customKey"
      },
      "id": "9c407e2b-9269-4612-b8ec-08c2f7d38313",
      "name": "Window Buffer Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        3237,
        958
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "options": {},
        "modelName": "models/gemini-1.5-flash"
      },
      "id": "10fc6cac-5633-4f66-b5f1-ac51db5838eb",
      "name": "Google Gemini Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "position": [
        3377,
        958
      ],
      "typeVersion": 1,
      "credentials": {}
    },
    {
      "parameters": {
        "options": {},
        "respondWith": "binary"
      },
      "id": "dc7b51ee-3d0d-449d-af9f-55ac96cea8c5",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [
        4717,
        658
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "url": "=https://api.elevenlabs.io/v1/text-to-speech/{{voice id}}",
        "method": "POST",
        "options": {},
        "sendBody": true,
        "sendHeaders": true,
        "authentication": "genericCredentialType",
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $('Basic LLM Chain').item.json.text }}"
            }
          ]
        },
        "genericAuthType": "httpCustomAuth",
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        }
      },
      "id": "186e9ef6-daa7-4764-ac74-7addf3a99256",
      "name": "ElevenLabs - Generate Audio",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        4397,
        658
      ],
      "typeVersion": 4.2,
      "credentials": {}
    },
    {
      "parameters": {
        "content": "* ### For the Text-to-Speech part, we'll use ElevenLabs.io, which is free and offers a variety of voices to choose from. However, you can also use the OpenAI `\"Generate audio\"` node instead.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n* ### Since there is no pre-built node for `\"ElevenLabs\"` in n8n, we'll connect to it through its API using the \"HTTP Request\" node.\n\n## Prerequisites:\n* ### `\"ElevenLabs API Key\"` (you can obtain it from their website).\n* ### `\"Voice ID\"` (you can also get it from ElevenLabs' \"Voice Library\").\n## Setup\n* ### In the URL parameter, replace \"{{voice id}}\" at the end of the URL with the Voice ID you obtained from ElevenLabs.io.\n* ### To set up your API Key, add custom authentication and include the following `JSON` with your acual ElevenLabs API Key:\n```json\n{\n  \"headers\": {\n    \"xi-api-key\": \"put-your-API-Key-here\"\n  }\n}\n```",
        "height": 843.7602354099661,
        "width": 468.73250812192407
      },
      "id": "99ab49d6-c343-4be8-b898-e3ed31fd387c",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4197,
        498
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### The \"Get Chat,\" \"Insert Chat,\" and \"Window Buffer Memory\" nodes will help the LLM model maintain context throughout the conversation.",
        "height": 91.01435855269375,
        "width": 487.4293487597613,
        "color": 6
      },
      "id": "6f20af10-650f-4cc9-b1df-f306da0c5c2c",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2820,
        460
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "8392ef6b-c9be-44b5-a4fd-96e5a4f6ea7d",
      "name": "Limit",
      "type": "n8n-nodes-base.limit",
      "position": [
        4057,
        658
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "text": "={{ $('OpenAI - Speech to Text').item.json[\"text\"] }}",
        "messages": {
          "messageValues": [
            {
              "type": "AIMessagePromptTemplate",
              "message": "=To maintain context and fully understand the user's question, always review the previous conversation between you and him before providing an answer.\nThis is the previous conversation:\n{{ $('Aggregate').item.json[\"context\"].map(m => `\nHuman: ${m.human || 'undefined'}\nAI Assistant: ${m.ai || 'undefined'}\n`).join('') }}"
            }
          ]
        },
        "promptType": "define"
      },
      "id": "a033b25e-8517-4665-8f52-37142296860e",
      "name": "Basic LLM Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "position": [
        3357,
        658
      ],
      "typeVersion": 1.4
    },
    {
      "parameters": {
        "path": "voice_message",
        "options": {},
        "httpMethod": "POST",
        "responseMode": "responseNode"
      },
      "id": "f9207e37-3814-4a01-a439-f482fe422d57",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [
        2477,
        658
      ],
      "webhookId": "e9f611eb-a8dd-4520-8d24-9f36deaca528",
      "typeVersion": 2
    },
    {
      "parameters": {
        "options": {},
        "resource": "audio",
        "operation": "transcribe",
        "binaryPropertyName": "voice_message"
      },
      "id": "3d7241bb-6c3d-4676-845b-9b5832d5d19d",
      "name": "OpenAI - Speech to Text",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        2657,
        658
      ],
      "typeVersion": 1.3,
      "credentials": {}
    }
  ],
  "pinData": {},
  "repo_name": "n8nbkp",
  "repo_owner": "cyberomnes",
  "repo_path": "cyberomnes/n8nbkp/",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-09-29T03:02:40.069Z",
      "updatedAt": "2024-09-29T03:02:40.069Z",
      "id": "WPrQCU0lGrKUZT3o",
      "name": "Workflows"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-09-29T03:28:07.225Z",
  "versionId": "4daf8de4-74cc-4e35-b553-cad63ad05026"
}